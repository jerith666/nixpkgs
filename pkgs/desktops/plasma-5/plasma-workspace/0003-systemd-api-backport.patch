commit 97180f6e904dcffa27b78e43f5985f527cddced2
Author: David Edmundson <kde@davidedmundson.co.uk>
Date:   Thu Jul 2 18:36:19 2020

    [libkworkspace] Port from deprecated GetSessionByPID
    
    This method calls doesn't seem to work anymore having been replaced by
    the more intuitve virtual paths on the logind over a year ago.
    
    Arguably that's still a bug upstream that GetSessionByPID no longer
    works correctly, but we may as well port to the simpler path that avoids
    so many layers of indirection.
    
    Use of "/auto" does not exist on old distros so the legacy path is kept.
    
    The paths used in this class were always wrong, which went unnoticed as
    this is the first usage of them.
    
    BUG: 423526
    (cherry picked from commit 9ce3e6ea2aa2a004cafc43dc8b5f4ad514b21c5f)
    
    Conflicts:
            libkworkspace/kdisplaymanager.cpp
    
              -- the line we're conflicting with has a "bleh once again"
                 comment, so presumably it's okay to discard it in favor
                 of what's in the cherry-picked commit

diff --git a/components/tests/sessions.qml b/components/tests/sessions.qml
new file mode 100644
index 000000000..fe8cdd48a
--- /dev/null
+++ b/components/tests/sessions.qml
@@ -0,0 +1,15 @@
+import QtQuick 2.15
+import org.kde.plasma.private.sessions 2.0
+
+ListView
+{
+    width: 500
+    height: 500
+
+    model: SessionsModel{}
+
+    delegate: Text {
+        text: model.name + " " + model.session + " " + model.displayNumber + " VT" +model.vtNumber
+    }
+
+}
diff --git a/libkworkspace/kdisplaymanager.cpp b/libkworkspace/kdisplaymanager.cpp
index 3e73f9d9f..657b76c77 100644
--- a/libkworkspace/kdisplaymanager.cpp
+++ b/libkworkspace/kdisplaymanager.cpp
@@ -56,9 +56,9 @@
 #define _SYSTEMD_SERVICE "org.freedesktop.login1"
 #define _SYSTEMD_BASE_PATH "/org/freedesktop/login1"
 #define _SYSTEMD_MANAGER_IFACE _SYSTEMD_SERVICE ".Manager"
-#define _SYSTEMD_SESSION_BASE_PATH _SYSTEMD_BASE_PATH "/Session"
+#define _SYSTEMD_SESSION_BASE_PATH _SYSTEMD_BASE_PATH "/session"
 #define _SYSTEMD_SEAT_IFACE _SYSTEMD_SERVICE ".Seat"
-#define _SYSTEMD_SEAT_BASE_PATH _SYSTEMD_BASE_PATH "/Seat"
+#define _SYSTEMD_SEAT_BASE_PATH _SYSTEMD_BASE_PATH "/seat"
 #define _SYSTEMD_SESSION_IFACE _SYSTEMD_SERVICE ".Session"
 #define _SYSTEMD_USER_PROPERTY "User"
 #define _SYSTEMD_SEAT_PROPERTY "Seat"
@@ -431,18 +431,30 @@ KDisplayManager::exec(const char *cmd, QByteArray &buf)
 static bool getCurrentSeat(QDBusObjectPath *currentSession, QDBusObjectPath *currentSeat)
 {
     SystemdManager man;
-    QDBusReply<QDBusObjectPath> r = man.call(QStringLiteral("GetSessionByPID"), (uint) QCoreApplication::applicationPid());
-    if (r.isValid()) {
-        SystemdSession sess(r.value());
-        if (sess.isValid()) {
-            NamedDBusObjectPath namedPath = sess.getSeat();
-            if (currentSession)
-                *currentSession = r.value();
-            *currentSeat = namedPath.path;
+    if (man.isValid()) {
+
+        *currentSeat = QDBusObjectPath(_SYSTEMD_SEAT_BASE_PATH "/auto");
+        SystemdSeat seat(*currentSeat);
+        if (seat.isValid()) {
+            // if "auto" seat works, it's safe to assume session does
+            *currentSession = QDBusObjectPath(_SYSTEMD_SESSION_BASE_PATH "/auto");
             return true;
         }
-    }
-    else {
+
+        // auto is newer and may not exist on all platforms, fallback to GetSessionByPID if the above failed
+
+        QDBusReply<QDBusObjectPath> r = man.call(QStringLiteral("GetSessionByPID"), (uint) QCoreApplication::applicationPid());
+        if (r.isValid()) {
+            SystemdSession sess(r.value());
+            if (sess.isValid()) {
+                NamedDBusObjectPath namedPath = sess.getSeat();
+                if (currentSession)
+                    *currentSession = r.value();
+                *currentSeat = namedPath.path;
+                return true;
+            }
+        }
+    } else {
         CKManager man;
         QDBusReply<QDBusObjectPath> r = man.call(QStringLiteral("GetCurrentSession"));
         if (r.isValid()) {
@@ -701,7 +713,7 @@ KDisplayManager::localSessions(SessList &list)
                              * doesn't seem exactly... right to me --mbriza
                              */
                             se.session = QStringLiteral("<unknown>");
-                            se.self = lsess.property("Display").toString() == ::getenv("DISPLAY"); /* Bleh once again */
+                            se.self = lsess.property("Id") == qgetenv("XDG_SESSION_ID");
                             se.tty = !lsess.property("TTY").toString().isEmpty();
                         }
                         list.append(se);
